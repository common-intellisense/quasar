{
  "name": "QItem",
  "methods": [],
  "events": [
    {
      "name": "click",
      "description": "Emitted when the component is clicked",
      "params": "(evt: undefined, go: Function) => void",
      "description_zh": "单击组件时发出"
    }
  ],
  "props": {
    "active": {
      "value": "",
      "type": "Boolean",
      "description": "Put item into 'active' state",
      "default": null,
      "description_zh": "将项目置于“活动”状态"
    },
    "dark": {
      "value": "",
      "type": "String",
      "description": "",
      "default": "",
      "extends": "dark",
      "description_zh": ""
    },
    "clickable": {
      "value": "",
      "type": "Boolean",
      "description": "Is QItem clickable? If it's the case, then it will add hover effects and emit 'click' events",
      "default": "false",
      "description_zh": "QItem 可以点击吗？如果是这种情况，那么它将添加悬停效果并发出“点击”事件"
    },
    "dense": {
      "value": "",
      "type": "String",
      "description": "",
      "default": "",
      "extends": "dense",
      "description_zh": ""
    },
    "inset-level": {
      "value": "",
      "type": "Number",
      "description": "Apply an inset; Useful when avatar/left side is missing but you want to align content with other items that do have a left side, or when you're building a menu",
      "default": "",
      "description_zh": "应用插图;当缺少头像/左侧，但您希望将内容与具有左侧的其他项目对齐时，或者当您构建菜单时，这很有用"
    },
    "tabindex": {
      "value": "",
      "type": "String",
      "description": "",
      "default": "",
      "extends": "tabindex",
      "description_zh": ""
    },
    "tag": {
      "value": "",
      "type": "String",
      "description": "",
      "default": "div",
      "extends": "tag",
      "desc": "HTML tag to render; Suggestion: use 'label' when encapsulating a QCheckbox/QRadio/QToggle so that when user clicks/taps on the whole item it will trigger a model change for the mentioned components",
      "examples": [
        "a",
        "label",
        "div"
      ],
      "description_zh": ""
    },
    "manual-focus": {
      "value": "",
      "type": "Boolean",
      "description": "Put item into a manual focus state; Enables 'focused' prop which will determine if item is focused or not, rather than relying on native hover/focus states",
      "default": "false",
      "description_zh": "将项目置于手动对焦状态;启用“聚焦”道具，该道具将确定项目是否聚焦，而不是依赖于本机悬停/聚焦状态"
    },
    "focused": {
      "value": "",
      "type": "Boolean",
      "description": "Determines focus state, ONLY if 'manual-focus' is enabled / set to true",
      "default": "false",
      "description_zh": "确定对焦状态，仅当启用/设置为 true 时"
    }
  },
  "link": "https://v2.quasar.dev/vue-components/list-and-list-items",
  "link_zh": "https://v2.quasar.dev/vue-components/list-and-list-items"
}
