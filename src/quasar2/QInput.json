{
  "name": "QInput",
  "methods": [
    {
      "name": "focus",
      "description": "Focus underlying input tag",
      "params": "",
      "description_zh": "聚焦底层输入标记"
    },
    {
      "name": "blur",
      "description": "Lose focus on underlying input tag",
      "params": "",
      "description_zh": "失去对底层输入标记的关注"
    },
    {
      "name": "select",
      "description": "Select input text",
      "params": "",
      "description_zh": "选择输入文本"
    },
    {
      "name": "getNativeElement",
      "description": "DEPRECATED; Access 'nativeEl' directly instead; Get the native input/textarea DOM Element",
      "params": "",
      "description_zh": "荒废的;直接访问“nativeEl”;获取本机 input/textarea DOM 元素"
    }
  ],
  "events": [
    {
      "name": "update:model-value",
      "description": "",
      "params": "(value: String,Number,null) => void",
      "description_zh": ""
    },
    {
      "name": "focus",
      "description": "Emitted when component gets focused",
      "params": "(evt: undefined) => void",
      "description_zh": "当组件聚焦时发出"
    },
    {
      "name": "blur",
      "description": "Emitted when component loses focus",
      "params": "(evt: undefined) => void",
      "description_zh": "当组件失去焦点时发射"
    }
  ],
  "props": {
    "model-value": {
      "value": "",
      "type": "String | Number | null | undefined",
      "description": "",
      "default": "",
      "extends": "model-value",
      "desc": "Model of the component; Either use this property (along with a listener for 'update:modelValue' event) OR use v-model directive",
      "examples": [
        "v-model=\"myText\""
      ],
      "description_zh": ""
    },
    "shadow-text": {
      "value": "",
      "type": "String",
      "description": "Text to be displayed as shadow at the end of the text in the control; Does NOT applies to type=file",
      "default": "",
      "description_zh": "要在控件中文本末尾显示为阴影的文本;不适用于 type=file"
    },
    "type": {
      "value": "",
      "type": "String",
      "description": "Input type",
      "default": "text",
      "description_zh": "输入类型"
    },
    "debounce": {
      "value": "",
      "type": "String | Number",
      "description": "Debounce amount (in milliseconds) when updating model",
      "default": "",
      "description_zh": "更新模型时的去抖动量（以毫秒为单位）"
    },
    "maxlength": {
      "value": "",
      "type": "String | Number",
      "description": "Specify a max length of model",
      "default": "",
      "description_zh": "指定模型的最大长度"
    },
    "autogrow": {
      "value": "",
      "type": "Boolean",
      "description": "Make field autogrow along with its content (uses a textarea)",
      "default": "false",
      "description_zh": "使字段与其内容一起自动增长（使用文本区域）"
    },
    "input-class": {
      "value": "",
      "type": "String | Array | Object",
      "description": "Class definitions to be attributed to the underlying input tag",
      "default": "",
      "description_zh": "要归因于基础输入标记的类定义"
    },
    "input-style": {
      "value": "",
      "type": "String | Array | Object",
      "description": "Style definitions to be attributed to the underlying input tag",
      "default": "",
      "description_zh": "要归因于基础输入标记的样式定义"
    }
  },
  "link": "https://v2.quasar.dev/vue-components/input",
  "link_zh": "https://v2.quasar.dev/vue-components/input"
}
